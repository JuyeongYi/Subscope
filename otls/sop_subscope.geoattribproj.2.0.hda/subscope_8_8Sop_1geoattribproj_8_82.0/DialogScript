# Dialog script for subscope::geoattribproj::2.0 automatically generated

{
    name	subscope::geoattribproj::2.0
    script	subscope::geoattribproj::1.0
    label	"Geometry Attribute Projection"

    help {
	""
    }
    bindhandle prexform_rx xform "Transformer" pivot_comp_rx "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_ry xform "Transformer" pivot_comp_ry "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_rz xform "Transformer" pivot_comp_rz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_shear1 xform "Transformer" pivot_comp_shear_xy "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_shear2 xform "Transformer" pivot_comp_shear_xz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_shear3 xform "Transformer" pivot_comp_shear_yz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_xOrd xform "Transformer" pivot_comp_trs_order "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_tx xform "Transformer" pivot_comp_tx "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_ty xform "Transformer" pivot_comp_ty "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_tz xform "Transformer" pivot_comp_tz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prexform_rOrd xform "Transformer" pivot_comp_xyz_order "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prx xform "Transformer" pivot_rx "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle pry xform "Transformer" pivot_ry "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle prz xform "Transformer" pivot_rz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle px xform "Transformer" px "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle py xform "Transformer" py "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle pz xform "Transformer" pz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle rx xform "Transformer" rx "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle ry xform "Transformer" ry "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle rz xform "Transformer" rz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle xOrd xform "Transformer" trs_order "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle tx xform "Transformer" tx "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle ty xform "Transformer" ty "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle tz xform "Transformer" tz "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"
    bindhandle rOrd xform "Transformer" xyz_order "movetool_candidate(1) ownerop('transform1') owneropgroup('group')"

    inputlabel	1	"Geometry with Prim Attrib"
    parmtag { inputisref1 1 }
    inputlabel	2	"Reference 2D Volume"
    parmtag { inputisref2 1 }
    inputlabel	3	"Xform Points"
    inputlabel	4	"Sub-Network Input #4"

    parm {
        name    "primAttrsToProj"
        label   "Prim Attribs"
        type    string
        default { "*" }
        menutoggle {
            [ "node = kwargs['node'].node(\"__ref\")" ]
            [ "geo = node.geometry()" ]
            [ "result = []" ]
            [ "" ]
            [ "allowed = (hou.attribData.Float, hou.attribData.Int) " ]
            [ "if geo:" ]
            [ "    attribs = geo.primAttribs()" ]
            [ "    for attrib in sorted(attribs, key=lambda a: a.name()):" ]
            [ "        if attrib.dataType() not in allowed:" ]
            [ "            continue" ]
            [ "        result.append(attrib.name())" ]
            [ "        result.append(attrib.name())" ]
            [ "return result" ]
            language python
        }
        parmtag { "editor" "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "farthest"
        label   "Farthest"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "centroid"
        label   "Centroid Layers"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "showGeoGuide"
        label   "Show Guide Geometry"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    group {
        name    "layerXform"
        label   "Layer Transform"

        parm {
            name    "xOrd"
            label   "Transform Order"
            type    ordinal
            joinnext
            default { "srt" }
            menu {
                "srt"   "Scale Rot Trans"
                "str"   "Scale Trans Rot"
                "rst"   "Rot Scale Trans"
                "rts"   "Rot Trans Scale"
                "tsr"   "Trans Scale Rot"
                "trs"   "Trans Rot Scale"
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "rOrd"
            label   "Rotate Order"
            type    ordinal
            nolabel
            default { "xyz" }
            menu {
                "xyz"   "Rx Ry Rz"
                "xzy"   "Rx Rz Ry"
                "yxz"   "Ry Rx Rz"
                "yzx"   "Ry Rz Rx"
                "zxy"   "Rz Rx Ry"
                "zyx"   "Rz Ry Rx"
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "t"
            label   "Translate"
            type    vector
            size    3
            default { "0" "0" "0" }
            range   { -1 1 }
            parmtag { "autoscope" "1110000000000000" }
        }
        parm {
            name    "r"
            label   "Rotate"
            type    vector
            size    3
            default { "0" "0" "0" }
            range   { 0 360 }
            parmtag { "autoscope" "1110000000000000" }
        }
        groupcollapsible {
            name    "pivot"
            label   "Pivot"

            parm {
                name    "p"
                label   "Pivot Translate"
                type    vector
                size    3
                default { "0" "0" "0" }
                range   { -1 1 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "pr"
                label   "Pivot Rotate"
                type    vector
                size    3
                default { "0" "0" "0" }
                range   { 0 360 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
        }

        groupcollapsible {
            name    "prexform"
            label   "Pre-Xform"

            parm {
                name    "prexform_t"
                label   "Pre-Translate"
                type    vector
                size    3
                default { "0" "0" "0" }
                range   { -1 1 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "prexform_r"
                label   "Pre-Rotate"
                type    vector
                size    3
                default { "0" "0" "0" }
                range   { -1 1 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "prexform_shear"
                label   "Pre-Shear"
                type    float
                size    3
                default { "0" "0" "0" }
                range   { 0 10 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "prexform_xOrd"
                label   "Pre-Transform Order"
                type    ordinal
                joinnext
                default { "srt" }
                menu {
                    "srt"   "Scale Rot Trans"
                    "str"   "Scale Trans Rot"
                    "rst"   "Rot Scale Trans"
                    "rts"   "Rot Trans Scale"
                    "tsr"   "Trans Scale Rot"
                    "trs"   "Trans Rot Scale"
                }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "prexform_rOrd"
                label   "Pre-Rotate Order"
                type    ordinal
                nolabel
                default { "xyz" }
                menu {
                    "xyz"   "Rx Ry Rz"
                    "xzy"   "Rx Rz Ry"
                    "yxz"   "Ry Rx Rz"
                    "yzx"   "Ry Rz Rx"
                    "zxy"   "Rz Rx Ry"
                    "zyx"   "Rz Ry Rx"
                }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
        }

    }

}
